<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>rpc on Anabila</title>
    <link>https://anthonyabeo.github.io/tags/rpc/</link>
    <description>Recent content in rpc on Anabila</description>
    <image>
      <url>https://anthonyabeo.github.io/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</url>
      <link>https://anthonyabeo.github.io/%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Mon, 27 Sep 2021 13:44:57 +0000</lastBuildDate><atom:link href="https://anthonyabeo.github.io/tags/rpc/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Remote Procedure Calls in Go</title>
      <link>https://anthonyabeo.github.io/posts/go-rpc/</link>
      <pubDate>Mon, 27 Sep 2021 13:44:57 +0000</pubDate>
      
      <guid>https://anthonyabeo.github.io/posts/go-rpc/</guid>
      <description>Introduction These days most networked applications are designed as logical, self-contained, unifunctional services. Each service communicates with other services to complete some user request. For example, a notification service may contact a user management service to acquire a user&amp;rsquo;s credentials before sending a notification. Such inter-service communication requires a communication protocol such as REST and GraphQL. In this post, I want to briefly introduce another method called Remote Procedure Calls (RPC).</description>
    </item>
    
  </channel>
</rss>
